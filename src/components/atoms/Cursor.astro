<div class="cursor"></div>

<style>
.cursor {
  position: fixed;
  top: 0;
  left: 0;
  width: 150px;
  height: 150px;
  background-color: #edb74d;
  border-radius: 50%;
  margin-top: -6px;
  margin-left: -5px;
  filter: blur(100px);
  pointer-events: none;
  z-index: -9999;
  opacity: 0;
  transition: opacity 0.5s ease;
  transform: translate(-50%, -50%);
}

.cursor::after {
  position: absolute;
  display: block;
  content: '';
  width: 30px;
  height: 30px;
  background: #fff;
  border-radius: 50%;
  transform-origin: 50px 50px;
  animation: rotate 3.5s ease-in-out infinite;
  filter: blur(3px);
}

.cursor::before {
  position: absolute;
  display: block;
  content: '';
  width: 40px;
  height: 40px;
  background: #fff;
  border-radius: 50%;
  transform-origin: 30px 30px;
  animation: rotate-reverse 3.5s ease-in-out 2s infinite;
  filter: blur(3px);
}

@keyframes rotate {
  0% { transform: rotate(0deg) translateX(10px) rotate(0deg); }
  100% { transform: rotate(360deg) translateX(10px) rotate(-360deg); }
}

@keyframes rotate-reverse {
  0% { transform: rotate(0deg) translateX(20px) rotate(0deg); }
  100% { transform: rotate(-360deg) translateX(20px) rotate(360deg); }
}

.cursor.active {
  opacity: 1;
}
</style>

<script is:inline>
// Wacht tot het document volledig is geladen
document.addEventListener("DOMContentLoaded", function() {
  // Check of dit een touch device is
  const isTouchDevice = window.matchMedia("(hover: none)").matches;
  if (isTouchDevice) return;

  const cursor = document.querySelector('.cursor');
  
  if (!cursor) {
    console.error("Cursor element niet gevonden");
    return;
  }
  
  // Variabelen voor vloeiende beweging
  let cursorX = 0;
  let cursorY = 0;
  let targetX = 0;
  let targetY = 0;
  
  // Volg muisbewegingen
  document.addEventListener('mousemove', function(e) {
    targetX = e.clientX;
    targetY = e.clientY;
  });
  
  // Animatiefunctie met vertraging en bounce
  function animateCursor() {
    // Vertraging factor (lagere waarde = meer vertraging)
    const ease = 0.07;
    
    // Bereken afstand tussen huidige positie en doelpositie
    const distX = targetX - cursorX;
    const distY = targetY - cursorY;
    
    // Voeg een klein bounce-effect toe door de beweging licht te overdrijven
    cursorX += distX * ease;
    cursorY += distY * ease;
    
    // Update de cursorpositie
    cursor.style.transform = `translate(calc(${cursorX}px - 50%), calc(${cursorY}px - 50%))`;
    
    // Blijf animeren
    requestAnimationFrame(animateCursor);
  }
  
  // Start de animatie
  animateCursor();
  
  // Activeer de cursor na een korte vertraging
  setTimeout(() => {
    cursor.classList.add('active');
  }, 500);
});
</script>