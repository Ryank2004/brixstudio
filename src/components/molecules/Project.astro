---
import ArrowRight from "@atoms/ArrowRight.astro";
import projects from "@data/projects.json";

// Ontvang de limit als een prop, standaard geen limiet
const { limit } = Astro.props;

// Beperk de projecten als een limit is opgegeven
const displayedProjects = limit ? projects.slice(0, limit) : projects;
---

{
    displayedProjects.map(({ name, image, slug }) => (
        <li>
            <a aria-label={`See project ${name}`} href={`/projecten/${slug}`}>
                <div class="image-container">
                    <img
                        class="project-image"
                        alt={name}
                        src={image}
                        width="600"
                        height="500"
                        loading="lazy"
                    />
                </div>
                <div class="project-text">
                    <h3>{name}</h3>
                    <div class="see-more">
                        <span>Bekijk project </span>
                        <ArrowRight />
                    </div>
                </div>
            </a>
        </li>
    ))
}

<script is:inline>
    document.addEventListener("DOMContentLoaded", () => {
        if (matchMedia("(prefers-reduced-motion: reduce)").matches) return;

        gsap.registerPlugin(ScrollTrigger);

        // Selecteer de afbeeldingen
        document.querySelectorAll(".project-image").forEach((img) => {
            img.style.animation = "none";

            gsap.from(img, {
                scrollTrigger: {
                    trigger: img,
                    start: "top bottom",
                    end: "center center",
                    scrub: 1,
                    markers: false,
                },
                ease: "power3.out",
                "--clip": "30%",
            });
        });
    });
</script>

<style>
    a {
        display: flex;
        flex-direction: column;
        text-decoration: none;
        color: inherit;
    }

    .image-container {
        position: relative;
        width: 100%;
        height: 400px;
        /* overflow: hidden; This kept the animation timeline from working properly */
    }

    .project-image {
        width: 100%;
        height: 100%;
        border-radius: 10px;
        object-fit: cover;
        clip-path: inset(var(--clip) round 10px);
        will-change: clip-path;
    }

    @supports (animation-timeline: view()) {
        .project-image{
            animation: reveal linear forwards;
            animation-timeline: view();
            animation-range: 0% 50%;
        }
    }

    @keyframes reveal {
        from {
            clip-path: inset(50% round 10px);
        }
        to {
            clip-path: inset(0% round 10px);
        }
    }

    .project-text {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        padding: 32px 8px;
    }

    h3 {
        font-family: "JetBrains", sans-serif;
        font-size: 18px;
        font-weight: 400;
        letter-spacing: 1.5px;
        text-transform: uppercase;
    }

    a span {
        display: none;
    }

    .see-more {
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: 12px;
    }

    .see-more:hover {
        text-decoration: underline;
    }

    /* A11LY reduced motion */
    @media (prefers-reduced-motion: reduce) {
        .project-image {
            animation: none;
            clip-path: inset(0% round 10px);
        }
    }

    /* Responsive grid placement */

    @media screen and (min-width: 764px) {
        /* Eerste en derde item in de eerste kolom */
        li:nth-child(1) {
            grid-column: 1;
            grid-row: 1;
        }
        li:nth-child(3) {
            grid-column: 1;
            grid-row: 3;
        }
        li:nth-child(5) {
            grid-column: 1;
            grid-row: 5;
        }

        /* Tweede en vierde item in de tweede kolom, verschoven */
        li:nth-child(2) {
            grid-column: 2;
            grid-row: 2 / span 2;
        }
        li:nth-child(4) {
            grid-column: 2;
            grid-row: 4 / span 2;
        }
        li:nth-child(6) {
            grid-column: 2;
            grid-row: 6 / span 2;
        }
    }

    @media screen and (min-width: 1024px) {
        a span {
            display: block;
        }
        h3 {
            font-size: 20px;
        }
    }
</style>
