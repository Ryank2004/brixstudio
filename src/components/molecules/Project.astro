---
import ArrowRight from "@atoms/ArrowRight.astro";
import projects from "@data/projects.json";

// Ontvang de limit als een prop, standaard geen limiet
const { limit } = Astro.props;

// Beperk de projecten als een limit is opgegeven
const displayedProjects = limit ? projects.slice(0, limit) : projects;
---

{
    displayedProjects.map(({ name, image, slug }) => (
        <li>
            <a aria-label={`See project ${name}`} href={`/projecten/${slug}`}>
                <div class="image-container">
                    <img
                        class="project-image"
                        alt={name}
                        src={image}
                        width="600"
                        height="500"
                        loading="lazy"
                    />
                </div>
                <div class="project-text">
                    <h3>{name}</h3>
                    <div class="see-more">
                        <span>Bekijk project </span>
                        <ArrowRight />
                    </div>
                </div>
            </a>
        </li>
    ))
}

<script is:inline>
    document.addEventListener("DOMContentLoaded", () => {
        gsap.registerPlugin(ScrollTrigger);

        // Selecteer de afbeeldingen
        document.querySelectorAll(".project-image").forEach((img) => {
            gsap.set(img, { "--clip": "40%" });

            // Check voor desktop (> 1024px)
            if (window.innerWidth > 1024) {
                // Desktop versie met timeline (scrub)
                gsap.to(img, {
                    "--clip": "0%",
                    ease: "power3.out",
                    scrollTrigger: {
                        trigger: img,
                        start: "-100% center",
                        end: "100% center",
                        scrub: 1.2,
                        markers: false,
                    },
                });
            } else {
                // Mobiele versie met toggleActions (geen scrub)
                gsap.to(img, {
                    "--clip": "0%",
                    ease: "power3.out",
                    scrollTrigger: {
                        trigger: img,
                        duration: 3, 
                        start: "-70% center",
                        scrub: false,
                        markers: false,
                        toggleActions: "play none play reverse",
                    },
                });
            }
        });
    });
</script>
<style>
    a {
        display: flex;
        flex-direction: column;
    }

    .image-container {
        position: relative;
        width: 100%;
        height: 400px;
        border-radius: 10px;
        overflow: hidden;
    }

    .project-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        --clip: 30%;
        clip-path: inset(var(--clip) round 10px);
        will-change: auto;
    }

    .project-text {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        padding: 32px 8px;
    }

    h3 {
        font-family: "JetBrains", sans-serif;
        font-size: 18px;
        font-weight: 400;
        letter-spacing: 1.5;
        text-transform: uppercase;
    }

    a span {
        display: none;
    }

    .see-more {
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: 12px;
    }

    .see-more:hover {
        color: var(--hover);
    }

    @media screen and (min-width: 764px) {
        /* Eerste en derde item in de eerste kolom */
        li:nth-child(1) {
            grid-column: 1;
            grid-row: 1;
        }

        li:nth-child(3) {
            grid-column: 1;
            grid-row: 3;
        }

        li:nth-child(5) {
            grid-column: 1;
            grid-row: 5;
        }

        /* Tweede en vierde item in de tweede kolom, verschoven */
        li:nth-child(2) {
            grid-column: 2;
            grid-row: 2 / span 2;
        }

        li:nth-child(4) {
            grid-column: 2;
            grid-row: 4 / span 2;
        }

        li:nth-child(6) {
            grid-column: 2;
            grid-row: 6 / span 2;
        }
    }

    @media screen and (min-width: 1024px) {
        a span {
            display: block;
        }
        h3 {
            font-size: 20px;
        }
    }
</style>
